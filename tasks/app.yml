---
- name: install required libarchive-dev
  apt: pkg=libarchive-dev state=present

- name: install bundler
  gem: name=bundler state=latest

- name: install berkshelf configuration file
  template: >
    src=berkshelf-config.json.j2
    dest={{ berkshelf_api_config_path }}
    owner={{ berkshelf_api_owner }}
    group={{ berkshelf_api_group }}

- name: fetch the berks api binary
  get_url: >
    url=https://github.com/berkshelf/berkshelf-api/releases/download/{{ berkshelf_api_release }}/berkshelf-api.tar.gz
    dest=/tmp/berkshelf-api.tar.gz

- name: extract the api
  unarchive: >
    src=/tmp/berkshelf-api.tar.gz
    dest={{ berkshelf_api_home }}
    copy=no
    creates={{ berkshelf_api_home }}/bin/berks-api

- name: change permissions to berkshelf
  shell: >
    chown -R {{ berkshelf_api_owner }}:{{ berkshelf_api_group }} {{ berkshelf_api_home }}


- name: berkshelf api bundle install
  shell: bundle install --deployment --without development test
  args:
    chdir: "{{ berkshelf_api_home }}"

- name: writing supervisor script
  template: >
    src=supervisor-berkshelf.conf.j2
    dest={{ supervisord_additional_conf_dir }}/berkshelf.conf
    owner={{ berkshelf_api_owner }}
    group={{ berkshelf_api_group }}
    mode=0644
  notify: restart berkshelf

- name: update berkshelf supervisor configuration
  supervisorctl: >
    name=berkshelf-api
    supervisorctl_path={{ supervisord_bin_dir }}/supervisorctl
    state=present
  register: sv_out
  changed_when: sv_out.stdout is defined and sv_out.stdout != ""